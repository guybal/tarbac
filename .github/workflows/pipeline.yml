name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: docker.io/guybalmas/temporary-rbac-controller
      VERSION_FILE: VERSION
      MANAGER_MANIFEST: config/manager/manager.yaml

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Read Current Version
        id: read-version
        run: |
          if [ -f "$VERSION_FILE" ]; then
            echo "current_version=$(cat $VERSION_FILE)" >> $GITHUB_ENV
          else
            echo "current_version=v1.0.0" >> $GITHUB_ENV
          fi

      - name: Bump Patch Version
        id: bump-version
        run: |
          current_version="${{ env.current_version }}"
          if [[ "$current_version" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
            new_version="v${major}.${minor}.$((patch + 1))"
            echo "new_version=$new_version" >> $GITHUB_ENV
          else
            echo "Error: Invalid version format $current_version" >&2
            exit 1
          fi

      - name: Generate Code
        run: |
          go mod tidy
          controller-gen crd paths=./api/v1 output:crd:artifacts:config=./config/crd/bases

      - name: Update Docker Image Tag in Manifest
        run: |
          sed -i "s|${DOCKER_IMAGE}:${{ env.current_version }}|${DOCKER_IMAGE}:${{ env.new_version }}|g" $MANAGER_MANIFEST

      - name: Build and Push Docker Image
        run: |
          docker build -t "${DOCKER_IMAGE}:${{ env.new_version }}" .
          docker push "${DOCKER_IMAGE}:${{ env.new_version }}"

      - name: Update Version File
        run: echo "${{ env.new_version }}" > $VERSION_FILE

      - name: Commit Version Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add $MANAGER_MANIFEST $VERSION_FILE
          git commit -m "Update to version ${{ env.new_version }}"
          git push